{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/photo": {
            "get": {
                "description": "Get All Photo Data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photo"
                ],
                "operationId": "get-all-photo-data",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetPhotosResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Photo Data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photo"
                ],
                "operationId": "create-photo-data",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "request body json",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePhotoRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePhotoResponse"
                        }
                    }
                }
            }
        },
        "/photo/{photoId}": {
            "get": {
                "description": "Get One Photo Data By Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photo"
                ],
                "operationId": "get-one-photo-data-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Photo's id",
                        "name": "photoId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetPhotoByIdResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Photo Data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photo"
                ],
                "operationId": "update-photo-data",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Photo's id",
                        "name": "photoId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body json",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePhotoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdatePhotoResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Photo Data By Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photo"
                ],
                "operationId": "delete-photo-data-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Photo's id",
                        "name": "photoId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DeletePhotoResponse"
                        }
                    }
                }
            }
        },
        "/photo/{photoId}/comment": {
            "get": {
                "description": "Get All Comments Data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comment"
                ],
                "operationId": "get-all-comment",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Photo's id",
                        "name": "photoId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetCommentsResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Comment Data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comment"
                ],
                "operationId": "create-comment-data",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Photo's id",
                        "name": "photoId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body json",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCommentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCommentResponse"
                        }
                    }
                }
            }
        },
        "/photo/{photoId}/comment/{commentId}": {
            "get": {
                "description": "Get One Comment Data By Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comment"
                ],
                "operationId": "get-one-comment-data-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Photo's id",
                        "name": "photoId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Comment's id",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetCommentByIdResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Comment Data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comment"
                ],
                "operationId": "update-comment-data",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Photo's id",
                        "name": "photoId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Comment's id",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body json",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCommentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdatePhotoResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Comment Data By Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comment"
                ],
                "operationId": "delete-comment-data-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Photo's id",
                        "name": "photoId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Comment's id",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DeleteCommentResponse"
                        }
                    }
                }
            }
        },
        "/socialmedia": {
            "get": {
                "description": "Get All Social Media Data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Social Media"
                ],
                "operationId": "get-all-social-media-data",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetSocialMediasResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Social Media Data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Social Media"
                ],
                "operationId": "create-social-media-data",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "request body json",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateSocialMediaRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePhotoResponse"
                        }
                    }
                }
            }
        },
        "/socialmedia/{socialMediaId}": {
            "get": {
                "description": "Get One Social Media Data By Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Social Media"
                ],
                "operationId": "get-one-social-media-data-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Social media's id",
                        "name": "socialMediaId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetSocialMediaByIdResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Social Media Data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Social Media"
                ],
                "operationId": "update-social-media-data",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Social media's id",
                        "name": "socialMediaId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body json",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateSocialMediaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdatePhotoResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Social Media Data By Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Social Media"
                ],
                "operationId": "delete-social-media-data-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Social media's id",
                        "name": "socialMediaId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DeletePhotoResponse"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Login user Data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "operationId": "login-user",
                "parameters": [
                    {
                        "description": "request body json",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.LoginResponse"
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "description": "Create New user Data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "operationId": "register-user",
                "parameters": [
                    {
                        "description": "request body json",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.NewUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.NewUserResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CommentResult": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2023-04-14 09:44:00.462102+07"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "message": {
                    "type": "string",
                    "example": "wow..."
                },
                "photo_id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-04-14 09:44:00.462102+07"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.CreateCommentRequest": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "wow..."
                }
            }
        },
        "dto.CreateCommentResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "successfully created comment"
                },
                "result": {
                    "type": "string",
                    "example": "success"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 201
                }
            }
        },
        "dto.CreatePhotoRequest": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string",
                    "example": "myphoto description"
                },
                "photo_url": {
                    "type": "string",
                    "example": "photo.com"
                },
                "title": {
                    "type": "string",
                    "example": "myphoto"
                }
            }
        },
        "dto.CreatePhotoResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "successfully created photo"
                },
                "result": {
                    "type": "string",
                    "example": "success"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 201
                }
            }
        },
        "dto.CreateSocialMediaRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                }
            }
        },
        "dto.DeleteCommentResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "successfully deleted comment"
                },
                "result": {
                    "type": "string",
                    "example": "success"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dto.DeletePhotoResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "successfully deleted photo"
                },
                "result": {
                    "type": "string",
                    "example": "success"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dto.GetCommentByIdResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.CommentResult"
                },
                "message": {
                    "type": "string",
                    "example": "comment data successfully sent"
                },
                "result": {
                    "type": "string",
                    "example": "success"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dto.GetCommentsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CommentResult"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "comment data successfully sent"
                },
                "result": {
                    "type": "string",
                    "example": "success"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dto.GetPhotoByIdResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.PhotoResult"
                },
                "message": {
                    "type": "string",
                    "example": "photo data successfully sent"
                },
                "result": {
                    "type": "string",
                    "example": "success"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dto.GetPhotosResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.PhotoResult"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "photos data successfully sent"
                },
                "result": {
                    "type": "string",
                    "example": "success"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dto.GetSocialMediaByIdResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.SocialMediaResult"
                },
                "message": {
                    "type": "string",
                    "example": "social media data successfully sent"
                },
                "result": {
                    "type": "string",
                    "example": "success"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dto.GetSocialMediasResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SocialMediaResult"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "social media data successfully sent"
                },
                "result": {
                    "type": "string",
                    "example": "success"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dto.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "budi@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "budibudi"
                }
            }
        },
        "dto.LoginResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.TokenResponse"
                },
                "message": {
                    "type": "string",
                    "example": "login successfully"
                },
                "result": {
                    "type": "string",
                    "example": "success"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dto.NewUserRequest": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 12
                },
                "email": {
                    "type": "string",
                    "example": "budi@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "budibudi"
                },
                "username": {
                    "type": "string",
                    "example": "budi"
                }
            }
        },
        "dto.NewUserResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "registered successfully"
                },
                "result": {
                    "type": "string",
                    "example": "success"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 201
                }
            }
        },
        "dto.PhotoResult": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string",
                    "example": "myphoto description"
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-04-14 09:44:00.462102+07"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "photo_url": {
                    "type": "string",
                    "example": "photo.com"
                },
                "title": {
                    "type": "string",
                    "example": "myphoto"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-04-14 09:44:00.462102+07"
                },
                "user_id": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "dto.SocialMediaResult": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2023-04-14 09:44:00.462102+07"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "budi_"
                },
                "social_media_url": {
                    "type": "string",
                    "example": "budi_.com"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-04-14 09:44:00.462102+07"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.TokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "fgsfsdfbawgy45563456hfgbe"
                }
            }
        },
        "dto.UpdatePhotoResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "successfully updated photo"
                },
                "result": {
                    "type": "string",
                    "example": "success"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 200
                }
            }
        }
    }
}